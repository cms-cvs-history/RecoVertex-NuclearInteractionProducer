process NUCLEAR =  {
    service = MessageLogger
    {
                untracked vstring destinations = { "cout", "out" } # .log automatically
              #  untracked vstring statistics = { "cout", "nuclearseeding"}

                untracked vstring categories = { "NuclearSeedGenerator", "CkfPattern", "NuclearInteractionMaker" }

                untracked PSet out    = {
                        untracked string threshold = "DEBUG"
                        untracked PSet DEBUG = { untracked int32 limit = 0 }
                        untracked PSet NuclearSeedGenerator = { untracked int32 limit = -1}
                        untracked PSet CkfPattern = { untracked int32 limit = -1}
                        untracked PSet NuclearInteractionMaker = { untracked int32 limit = -1}
                        untracked bool noLineBreaks = true
                }
                untracked vstring debugModules = { "nuclearSeed", "ckfTrackCandidates" , "nuclearInteractionMaker"}

                untracked PSet cout  = {
                        untracked string threshold = "INFO"
                        untracked PSet INFO = { untracked int32 limit = 0 }
                        untracked PSet WARNING = { untracked int32 limit = 0 }
                        untracked PSet ERROR = { untracked int32 limit = 0 }
                        untracked PSet DEBUG = { untracked int32 limit = 0 }
                        untracked bool noLineBreaks = true
                }

    }

    source = PoolSource
    {
      untracked vstring fileNames = {
              'file:/afs/cern.ch/user/r/roberfro/cmssw/Config/test/singlepi20gev1.root'}
    }

    untracked PSet maxEvents = {untracked int32 input = -1}

    #include "Configuration/StandardSequences/data/FakeConditions.cff"
     # Tracker alignment
 #
 include "CalibTracker/Configuration/data/Tracker_FakeAlignment.cff"
 #
 ###################################################################
 #
 # Pixel calib
 #
 include "CalibTracker/Configuration/data/SiPixel_FakeGain.cff"
 #
 # Strip calib
 #
 include "CalibTracker/Configuration/data/SiStrip_FakeGain.cff"
 include "CalibTracker/Configuration/data/SiStrip_FakeNoise.cff"
 include "CalibTracker/Configuration/data/SiStrip_FakePedestals.cff"
 include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"


  # Reconstruction
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  include "CalibTracker/SiStripLorentzAngle/data/SiStripLAFakeESSource.cfi"

    # Refitter
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.TrajectoryInEvent = true

    # Nuclear Seeding
    include "RecoVertex/NuclearInteractionProducer/data/NuclearInteraction.cff"

    #Tracking truth
    include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi"
    replace trackingtruthprod.HepMCDataLabels = {"source"}

    module dump = EventContentAnalyzer{}

    module Out = PoolOutputModule
    {
     untracked string fileName = "file:pi20gev.root"
/*
     untracked vstring outputCommands = {
           "drop *",
           "keep CrossingFrame_*_*_*",
           "keep *_siStripDigis_*_*",
           "keep *_siPixelDigis_*_*",
           "keep *_siPixelClusters_*_*",
           "keep *_siStripClusters_*_*",
           "keep *_*_*_NUCLEAR",
           "keep *_trackingtruthprod_*_*",
           "keep *_source_*_*"
     }
*/
    }

   path p = {TrackRefitter, nuclear_interaction}

    #path p = { dump }

   endpath e =
   {
     Out
   }
}
